---
import { getCollection, type CollectionEntry, Entry } from 'astro:content';

import BaseLayout from '@layouts/BaseLayout.astro';
import Container from '@components/Container.astro';
import PageTitle from '@components/PageTitle.astro';
import BlogCard from '@components/BlogCard.astro';
import Pagination from '@components/Pagination.astro';

export async function getStaticPaths ({ paginate }) {
  
  const allPosts: CollectionEntry<"blogs"> = (await getCollection("blogs"))
      .sort((a:CollectionEntry<"blogs">, b:CollectionEntry<"blogs">) => b.data.publishedDate.valueOf() - a.data.publishedDate.valueOf());
    
  const allCategories: string[] = [...new Set(allPosts.map((post) => post.data.category.toLowerCase()))];

  return allCategories.flatMap((category) => {
    const fileterdPosts: CollectionEntry<"blogs"> = allPosts.filter((post) => typeof post.data.category === 'string' && category === post.data.category.toLowerCase());
  return paginate(
    fileterdPosts, {
      params: {category: category},
      pageSize: 2,
      props: { category },
    });
  });
}

const { page } = Astro.props;
const params = Astro.params;

---

<BaseLayout>
  <Container outerClass="mt-16 sm:mt-32">
    <PageTitle
      title="Travel experiences and tips"
      intro="All of my thoughts on programming, building products, leadership, travelling, whisky, and other random stuff. Not structured."
    />
    <div class="mt-16">
      <div class="flex flex-col gap-4">
        <div class="grid md:grid-cols-2 lg:grid-cols-2 gap-4">
          {
            page.data.map((post) => <BlogCard singlePost={post} />)
          }
        </div>
        <div class="flex flex-row justify-around">
          <Pagination prevURL={page.url.prev} nextURL={page.url.next} />
        </div>
      </div>
    </div>
  </Container>
</BaseLayout>