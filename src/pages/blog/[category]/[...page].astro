---
import { getCollection } from 'astro:content';
import { sortPostsByDate, filterPostsByStatus, getPostsByCategory } from '@utils/blogFunctions'
import { slugify } from '@utils/commonFunctions';

import BaseLayout from '@layouts/BaseLayout.astro';
import Container from '@components/Container.astro';
import PageTitle from '@components/PageTitle.astro';
import BlogCard from "@components/BlogCard.astro";
import Pagination from '@components/Pagination.astro';

export async function getStaticPaths ({ paginate }) {
  
  const allPosts = await getCollection('blogs', filterPostsByStatus).then(sortPostsByDate);
    
  const allCategories = [...new Set(allPosts.map((post) => slugify(post.data.category)))];

  return allCategories.flatMap((category) => {
    // const fileterdPosts = allPosts.filter((post) => typeof post.data.category === 'string' && category === post.data.category.toLowerCase());
    const filteredPosts = getPostsByCategory(allPosts, category);
  return paginate(
    filteredPosts, {
      params: {category: category},
      pageSize: 4,
      props: { category },
    });
  });
}

const { page, category } = Astro.props;
const params = Astro.params;
const allPosts = page.data;
---

<BaseLayout>
  <Container outerClass="mt-16 sm:mt-32">
    <PageTitle
      title={category}
      intro="All of my thoughts on programming, building products, leadership, travelling, whisky, and other random stuff. Not structured."
    />
    <div class="mt-16">
      <div class="flex flex-col gap-4">
        <div class="grid md:grid-cols-2 lg:grid-cols-2 gap-4">
          {
            allPosts.map((post) => (
              <BlogCard singlePost={post} />
              )
            )
          }
        </div>
        <div class="flex flex-row justify-around">
          <Pagination page={page}/>
        </div>
      </div>
    </div>
  </Container>
</BaseLayout>