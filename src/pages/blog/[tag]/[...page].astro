---
import { getCollection, type CollectionEntry, Entry } from 'astro:content';
import { slugify } from '@utils/utils'

import BaseLayout from '@layouts/BaseLayout.astro';
import Container from '@components/Container.astro';
import PageTitle from '@components/PageTitle.astro';
import BlogCard from '@components/BlogCard.astro';
import Pagination from '@components/Pagination.astro';

export async function getStaticPaths ({ paginate }) {
  
  const allPosts: CollectionEntry<"blogs"> = (await getCollection("blogs"))
      .sort((a:CollectionEntry<"blogs">, b:CollectionEntry<"blogs">) => b.data.publishedDate.valueOf() - a.data.publishedDate.valueOf());
  const allTags = new Set<string>();
  allPosts.map((post) => {
    Array.isArray(post.data.tags) && post.data.tags.map((tag) => allTags.add(slugify(tag.toLowerCase())));
  });
  return Array.from(allTags).flatMap((tag) => {
    const fileterdPosts: CollectionEntry<"blogs"> = allPosts.filter((post) => Array.isArray(post.data.tags) && post.data.tags.find((elem) => slugify(elem.toLowerCase()) === tag));
  return paginate(
    fileterdPosts, {
      params: {tag: tag},
      pageSize: 2,
      props: { tag },
    });
  });
}

const { page } = Astro.props;
const params = Astro.params;

---

<BaseLayout>
  <Container outerClass="mt-16 sm:mt-32">
    <PageTitle
      title="Travel experiences and tips"
      intro="All of my thoughts on programming, building products, leadership, travelling, whisky, and other random stuff. Not structured."
    />
    <div class="mt-16">
      <div class="flex flex-col gap-4">
        <div class="grid md:grid-cols-2 lg:grid-cols-2 gap-4">
          {
            page.data.map((post) => <BlogCard singlePost={post} />)
          }
        </div>
        <div class="flex flex-row justify-around">
          <Pagination prevURL={page.url.prev} nextURL={page.url.next} />
        </div>
      </div>
    </div>
  </Container>
</BaseLayout>